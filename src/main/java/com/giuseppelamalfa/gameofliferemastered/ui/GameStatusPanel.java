/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.giuseppelamalfa.gameofliferemastered.ui;

import com.giuseppelamalfa.gameofliferemastered.gamelogic.PlayerData;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.util.ArrayList;

/**
 *
 * @author glitchedcode
 */
public class GameStatusPanel extends javax.swing.JPanel implements MouseListener, MouseMotionListener, MouseWheelListener {

    GridPanel gridPanel;
    ArrayList<PlayerDisplayPanel> playerPanels = new ArrayList<>();

    /**
     * Creates new form GameStatusPanel
     */
    public GameStatusPanel() {
        initComponents();
        Color col = new Color(0, 0, 0, 0);
        setBackground(col);
        jPanel1.setBackground(col);
        playerWinLabel.setText("");

        playerPanels.add(playerDisplayPanel1);
        playerPanels.add(playerDisplayPanel2);
        playerPanels.add(playerDisplayPanel3);
        playerPanels.add(playerDisplayPanel4);
        playerPanels.add(playerDisplayPanel5);
        playerPanels.add(playerDisplayPanel6);
        playerPanels.add(playerDisplayPanel7);
        playerPanels.add(playerDisplayPanel8);

        resetPlayerPanels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        turnCountLabel = new javax.swing.JLabel();
        gameModeLabel = new javax.swing.JLabel();
        playerDisplayPanel1 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel2 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel3 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel4 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel5 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel6 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel7 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        playerDisplayPanel8 = new com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel();
        gameStatusLabel = new javax.swing.JLabel();
        playerWinLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        turnCountLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        turnCountLabel.setForeground(new java.awt.Color(255, 255, 255));
        turnCountLabel.setText("Turn: 99999");

        gameModeLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        gameModeLabel.setForeground(new java.awt.Color(255, 255, 255));
        gameModeLabel.setText("GameMode");

        gameStatusLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        gameStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        gameStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameStatusLabel.setText("Status");
        gameStatusLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        playerWinLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        playerWinLabel.setForeground(new java.awt.Color(255, 255, 255));
        playerWinLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerWinLabel.setText("PlayerName wins!");
        playerWinLabel.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerWinLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gameStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(gameModeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(turnCountLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerDisplayPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerDisplayPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerDisplayPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(turnCountLabel)
                    .addComponent(gameModeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerDisplayPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerWinLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setPlayerPanels(ArrayList<PlayerData> list) {
        resetPlayerPanels();
        if ( list != null ) {
            for (int i = 0; i < list.size() & i < playerPanels.size(); i++) {
                playerPanels.get(i).setToPlayer(list.get(i));
            }
        }
    }

    public void resetPlayerPanels() {
        for (PlayerDisplayPanel panel : playerPanels) {
            panel.reset();
        }
    }

    public void setTurnCount(int val) {
        turnCountLabel.setText("Turn: " + val);
    }

    public void setGridPanel(GridPanel panel) {
        addMouseListener(this);
        gridPanel = panel;
    }

    public void setGameModeName(String name) {
        gameModeLabel.setText(name);
    }

    public void setStatus(String status) {
        gameStatusLabel.setText(status);
    }

    public void setShowWinner(boolean val) {
        if ( val ) {
            if ( playerDisplayPanel1.getScore() == playerDisplayPanel2.getScore() ) {
                playerWinLabel.setText("Tie!");
                playerWinLabel.setBackground(new Color(0, 0, 0, 0));
                playerWinLabel.setForeground(Color.WHITE);
            }
            else {
                playerWinLabel.setText(playerDisplayPanel1.getPlayerName() + " wins!");
                playerWinLabel.setBackground(playerDisplayPanel1.getPlayerBackgroundColor());
                playerWinLabel.setForeground(playerDisplayPanel1.getPlayerForegroundColor());
            }
        }
        else {
            playerWinLabel.setText("");
            playerWinLabel.setBackground(new Color(0, 0, 0, 0));
        }
    }

    /*
    * MOUSE INPUT HANDLING
     */
    @Override
    public void mouseClicked(MouseEvent me) {
        gridPanel.mouseClicked(me);
    }

    @Override
    public void mouseMoved(MouseEvent me) {
        gridPanel.mouseMoved(me);
    }

    @Override
    public void mousePressed(MouseEvent me) {
        gridPanel.mousePressed(me);
    }

    @Override
    public void mouseDragged(MouseEvent me) {
        gridPanel.mouseDragged(me);
    }

    @Override
    public void mouseWheelMoved(MouseWheelEvent me) {
        gridPanel.mouseWheelMoved(me);
    }

    @Override
    public void mouseReleased(MouseEvent me) {
    }

    @Override
    public void mouseEntered(MouseEvent me) {
    }

    @Override
    public void mouseExited(MouseEvent me) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel gameModeLabel;
    private javax.swing.JLabel gameStatusLabel;
    private javax.swing.JPanel jPanel1;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel1;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel2;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel3;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel4;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel5;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel6;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel7;
    private com.giuseppelamalfa.gameofliferemastered.ui.PlayerDisplayPanel playerDisplayPanel8;
    private javax.swing.JLabel playerWinLabel;
    private javax.swing.JLabel turnCountLabel;
    // End of variables declaration//GEN-END:variables
}
