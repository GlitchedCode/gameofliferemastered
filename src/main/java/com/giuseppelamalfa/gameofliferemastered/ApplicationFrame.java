/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.giuseppelamalfa.gameofliferemastered;

import com.giuseppelamalfa.gameofliferemastered.utils.ImageManager;
import com.giuseppelamalfa.gameofliferemastered.gamelogic.Grid;
import javax.swing.ImageIcon;
import java.net.URL;

/**
 *
 * @author glitchedcode
 */
public class ApplicationFrame extends javax.swing.JFrame{

    private final Grid              grid;
    private final ImageManager      tileManager;
    
    static ImageIcon                icon;
    
    /*
    * JFRAME CODE
    */
    
    /**
     * Creates new form ApplicationFrame
     * @throws java.lang.Exception
     */
    public ApplicationFrame() throws Exception{
        tileManager = new ImageManager("tiles.json");
        grid = new Grid(200, 300, tileManager);
        URL resource = getClass().getClassLoader().getResource("Tiles/tile_0083.png");
        icon = new ImageIcon(resource);
        
        initComponents();
        
        if (!tileManager.isInitialized())
        {
            throw new Exception("Failed to initialize tile manager.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        gridCanvas = new com.giuseppelamalfa.gameofliferemastered.GridCanvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The game of Life: Remastered");
        setBackground(java.awt.Color.black);
        setIconImage(icon.getImage());
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));

        gridCanvas.setBackground(new java.awt.Color(82, 82, 82));
        gridCanvas.setForeground(new java.awt.Color(105, 105, 105));
        gridCanvas.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener()
        {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt)
            {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt)
            {
                gridCanvasAncestorResized(evt);
            }
        });

        javax.swing.GroupLayout gridCanvasLayout = new javax.swing.GroupLayout(gridCanvas);
        gridCanvas.setLayout(gridCanvasLayout);
        gridCanvasLayout.setHorizontalGroup(
            gridCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        gridCanvasLayout.setVerticalGroup(
            gridCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gridCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gridCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        gridCanvas.init();
        addKeyListener(gridCanvas);
        gridCanvas.setGrid(grid);
        gridCanvas.resetScreenOrigin();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridCanvasAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_gridCanvasAncestorResized
        gridCanvas.setSize(getContentPane().getSize());
        gridCanvas.resetScreenOrigin();
        gridCanvas.repaint();
    }//GEN-LAST:event_gridCanvasAncestorResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                ApplicationFrame frame = new ApplicationFrame();
                frame.setVisible(true);
            } catch (Exception ex) {
                ex.printStackTrace();
                System.exit(1);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.giuseppelamalfa.gameofliferemastered.GridCanvas gridCanvas;
    // End of variables declaration//GEN-END:variables
}
